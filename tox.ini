[tox]
envlist = lint, test, safety, docs, package
isolated_build = True
skipsdist = True
skip_missing_interpreters = true
requires = pip > 21.1

[pytest]
junit_family = xunit2
testpaths = tests
addopts = -vv --junitxml=build/junit.xml --cov-report=xml --cov-report=html --cov-report=term-missing --cov changes --html=build/test-report.html --self-contained-html --md docs/tests.md

[coverage:paths]
source = changes
[coverage:html]
directory = build/coverage_html
[coverage:xml]
output = build/cobertura.xml
[coverage:report]
fail_under = 60
show_missing = True
sort = Cover
[coverage:run]
parallel = True

[flake8]
ignore = E501 W503
output-file = flake8.txt

[isort]
known_third_party = attr,bumpversion,cached_property,click,giturlparse,haikunator,inflection,jinja2,pkg_resources,plumbum,pytest,requests,requests_cache,responses,semantic_version,setuptools,sphinx_bootstrap_theme,testtube,toml,uritemplate
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
combine_as_imports=True
line_length=88

[testenv]
description = pytests
deps = poetry
commands_pre = poetry install
commands = pytest {posargs}

[testenv:lint]
description = pre-commit with black, flake8, isort
deps = pre-commit
commands_pre =
commands = pre-commit run --all {posargs}

[testenv:safety]
description = security check with safety
deps =
    {[testenv]deps}
    safety
commands = safety check -i 40291

[testenv:docs]
description = mkdocs and pdoc3
whitelist_externals = cp
commands_pre = poetry install
commands =
    mkdocs {posargs:build}
    -cp build/test-report.html site/
    -cp -R build/coverage_html site/coverage
    pdoc3 --html --output-dir site/api --force changes

[testenv:package]
description = builds source and wheel distributions
commands = poetry build {posargs}

[testenv:report-coverage]
description = codecov and scrutinizer integration
passenv = TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_*
commands_pre =
deps =
    scrutinizer-ocular
    codecov
commands =
    codecov -e TOXENV
    ocular